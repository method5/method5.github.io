==========
RMOUG 2019
==========


Bio:
----
Jon Heller is an expert SQL and PL/SQL programmer with over 15 years of Oracle experience.  He is a DBA for Ventech Solutions in Urbandale, Iowa.  He enjoys creating open source software on GitHub, and answering questions on Stack Overflow where he is a top user in Oracle and PL/SQL.  Jon has a Master of Computer Science degree from North Carolina State University.

Session Title
-------------
Automate SQL with Method5 Open Source Remote Execution

Abstract Description (1200 characters, used by the committee to evaluate your abstract for submission):
--------------------

Managing a large number of Oracle databases is difficult and requires specialized tools.  Most automation programs only help with a small number of predefined tasks.

Method5 lets us quickly automate any task that can be solved with SQL, PL/SQL, or shell scripts.  The program is open source and agentless.  Method5 is a relational remote execution program that runs entirely inside Oracle, and integrates perfectly with existing databases and SQL tools.

This presentation discusses DBA automation gaps, problems with existing tools, and how a new type of dynamic SQL can solve many problems.  The API and advantages of Method5 are shown through real-life examples of managing hundreds of databases and a petabyte of data.  The robust architecture, simple administration, and flexible security of the program are also discussed.

With Method5, a single SQL statement runs commands across entire environments, such as: SELECT * FROM TABLE(M5(p_code => 'SELECT * FROM DUAL', p_targets => 'DEV'));  This presentation will help DBAs take control of their databases.

Note: More information is available at https://method5.github.io.  I presented at RMOUG 2018, with an average score of 4.83/5.


Presentation Summary (1200 characters, provides information to the attendees regarding the content they should expect to learn during the presentation):
--------------------

Learn how to easily run SQL, PL/SQL, and shell scripts on a large number of databases and hosts.  The open source program Method5 provides agentless remote execution, built entirely inside Oracle.  Remote execution lets us find, fix, and prevent problems that could never be solved one-database-at-a-time.  Querying and controlling all our databases starts with this one line of code, and can grow to solve many complex problems: SELECT * FROM TABLE(M5(p_code => 'SELECT * FROM DUAL', p_targets => 'DEV'));




Session Title
-------------
Practical Algorithm Analysis for Oracle Developers


Abstract Description (1200 characters, used by the committee to evaluate your abstract for submission):
--------------------

Oracle performance tuning is tough and requires different approaches.  Most tuning guides focus on collections of tips and tricks, present results as simple ratios, and don't explain how performance will scale with the data.

Algorithm analysis gives us another way to understand performance.  This presentation discusses functions that represent the worst-case performance of many common Oracle operations.  The functions and operations discussed are:
1/N           : sequence caching, bulk collect limit, prefetch, arraysize, union all
1             : (perfect) hash lookup, rownum
LOG(N)        : index lookup
1/((1-P)+P/N) : Amdahl's law for parallel processing
N             : full table scan, (bad) hash lookup
N*LOG(N)      : order by, sort merge join, hash join
N^2           : cross join, nested loops
N!            : join order
infinity      : the optimizer trying to solve the halting problem

The computational complexity of Oracle operations adds another useful way to understand database performance.  We can use a few functions to better compare and predict performance as our databases grow.


Presentation Summary (1200 characters, provides information to the attendees regarding the content they should expect to learn during the presentation):
--------------------

Learn how to use simple algorithm analysis for Oracle performance tuning.  Finding the mathematical functions that describe the computational complexity of different operations can help us understand and predict performance.  This presentation will discuss common functions such as 1/N, LOG(N), N, N*LOG(N), N^2, and N!, and how they can help us understand operations such as sequence caching, bulk collect limit, index access, full table scans, hashing, sorting, joining, parallel processing, and choosing execution plans.  This presentation also discusses times when the computational complexity is negated by implementation details.  With a new way of looking at simple mathematical functions we can add algorithm analysis to our performance tuning toolkit.















========
ECO 2018
========


Session Title
-------------
Automate SQL with Method5 Open Source Remote Execution


Presentation Summary (provides information to the attendees regarding the content they should expect to learn during your presentation):
----------------------------------------------------------------------------------------------------------------------------------------

Learn how to easily run SQL, PL/SQL, and shell scripts on a large number of databases and hosts, with the open source program Method5.  Remote execution is not just faster - it's a process that lets you find, fix, and prevent many problems could never be solved one-database-at-a-time.  Querying and controlling all your databases starts with this one line of code, and can grow to solve many complex problems: SELECT * FROM TABLE(M5(p_code => 'SELECT * FROM DUAL', p_targets => 'DEV'));


Abstract Description (used by the committee to evaluate your abstract for submission):
--------------------------------------------------------------------------------------

INTRODUCTION: Method5 is an open source program that extends Oracle SQL to allow parallel remote execution. It lets database administrators easily run SQL statements, PL/SQL blocks, and shell scripts quickly and securely on hundreds of databases.  Querying and controlling multiple databases can be as simple as this single line of code: select * from table(m5(p_code => 'select * from dual', p_targets => 'dev'));

AUTOMATION GAP: Most organizations only automate a few obvious, pre-defined tasks.  Unexpected operational challenges don't have a scalable solution.  DBAs tend to avoid certain problems because they don't have the time to logon to each database and run a command.  Current automation tools can't transform the way you solve operational problems.  Existing tools are slow, complex, or insecure.  Most importantly, none of them are relational.

IDEAL SOLUTION: The ideal solution is a new dynamic SQL syntax that lets you easily specify the "what", the "where", and the "how" for statements.  With Oracle data cartridge it is possible to invent a new type of SQL.

PROJECT HISTORY: Method5 is a robust, open source implementation designed for large environments.  Its first installation was for a large government contract, managing over 400 databases and a petabyte of data.

API: The program has a simple function interface and a more powerful procedure interface.  Parameters control what code is run, where it is run, and how it is run.  The results, metadata, and errors are stored in convenient tables and views.  Some other useful features are automatically managed database links, a global data dictionary, and many add-ons to handle common tasks.

ADVANTAGES COMPARED TO OTHER REMOTE EXECUTION PROGRAMS: The program is relational, fast, simple, easy to administer, secure, and gracefully handles exceptions and metadata.

REAL-LIFE EXAMPLES: Massive schema comparisons across dozens of databases, performance tuning across hundreds of databases, forecasts and visualizations for managing a petabyte of storage, managing and synchronizing 125K schemas, global data dictionary for 40 million objects, and many one-line ad hoc queries.

ARCHITECTURE: Method5 was built using templated dynamic PL/SQL, links, a lexer, scheduler, pipes, a table-driven configuration, and Oracle Data Cartridge.

INSTALLATION AND ADMINISTRATION: Everything is done inside an Oracle database.  The agentless installation is easy and requires no additional hardware, editions, options, privileges, or binary files.  Administration is well-documented and performed by only one person.  Method5 is orders of magnitude simpler to install and use than other remote execution programs.

SECURITY: Method5 is a great tool for securing databases, and the program itself has been carefully hardened.  Both the program and the users can be precisely controlled to limit the databases, features, and privileges allowed.  (The new privilege control feature was motivated by feedback from a few people at ECO 2017.)

YOUR NEW MISSION - AUTOMATE EVERYTHING: Method5 is so fast it can change the way you work.  Be proactive; treat all your databases as one logical database; and always spend the extra minute to find, fix, and prevent problems on all databases.

More information, including the code, user guide, and a video tutorial, is available at https://method5.github.io.








======================
Oracle Open World 2018
======================

Title (limit 80 characters)
---------------------------
Automate SQL with Method5 open source remote execution


Abstract (limit 750 characters)
-------------------------------
Learn how to easily run SQL, PL/SQL, and shell scripts on a large number of databases and hosts with the open source program Method5.  Remote execution is not just faster; it's a process that lets you find, fix, and prevent many problems could never be solved one-database-at-a-time.  Querying and controlling all your databases starts with this one line of code and can grow to solve many complex problems: SELECT * FROM TABLE(M5(p_code => 'SELECT * FROM DUAL', p_targets => 'DEV'));
 
Real-life examples will show how this new type of dynamic SQL helps database professionals automate many tasks.  You will also learn about Method5's agentless architecture, installation, and configurable privileges.

(Reviewers: See method5.github.io for details)


Speaker Bio:
------------
Jon Heller is an expert SQL and PL/SQL programmer with over 15 years of Oracle experience.  He enjoys creating open source software and is a top user in the Oracle and PL/SQL tags on Stack Overflow.







=========
GLOC 2018
=========

Abstract Title
--------------
Automate SQL with Method5 remote execution

Abstract Summary: (Up to 300 words)
-----------------------------------
Learn how to easily run SQL, PL/SQL, and shell scripts on a large number of databases and hosts with the open source program Method5.  Remote execution is not just faster; it's a process that lets you find, fix, and prevent many problems that you would never solve one-database-at-a-time.  Querying and controlling all your databases starts with this one line of code and can grow to solve many complex problems: SELECT * FROM TABLE(M5(p_code => 'SELECT * FROM DUAL', p_targets => 'DEV'));
 
Real-life examples will show how this new type of dynamic SQL can help administrators, analysts, and developers automate many Oracle tasks.  You will also learn about the agentless architecture and installation of the program, as well as how to precisely control privileges.

For reviewers: More information, including the code, user guide, and a video tutorial, is available at https://method5.github.io

Presenter Bio
-------------
Jon Heller is an expert SQL and PL/SQL programmer with over 15 years of Oracle experience.  He enjoys creating open source software and is a top user in the Oracle and PL/SQL tags on Stack Overflow.







===========
KScope 2018
===========

Session Title
-------------
Automate SQL with Method5 remote execution

Session Summary for Attendees
-----------------------------

Learn how to easily run SQL, PL/SQL, and shell scripts on a large number of databases and hosts with the open source program Method5.  Remote execution is not just faster, it's a process that lets you find, fix, and prevent many problems that you would never solve one-database-at-a-time.  It starts as simply as SELECT * FROM TABLE(M5(p_code => 'SELECT * FROM DUAL', p_targets => 'DEV')); and can grow to solve many complex tasks.


Detailed Abstract for Review
----------------------------
Method5 is an open source program that extends Oracle SQL to allow parallel remote execution. It lets database administrators easily run SQL statements, PL/SQL blocks, and shell scripts quickly and securely on hundreds of databases.  Querying and controlling multiple databases can be as simple as this: select * from table(m5(p_code => 'select * from dual', p_targets => 'dev'));

Most organizations only automate a few obvious, pre-defined tasks.  Unexpected operational challenges don't have a scalable solution.  DBAs tend to avoid certain problems because they don't have the time to logon to each database and run a command.

Current automation tools can't transform the way you solve operational problems.  Existing tools are slow, complex, or insecure.  None of them are relational.

The ideal solution is a new dynamic SQL syntax that lets you easily specify the "what", the "where", and the "how" for statements.

Method5 is a robust, open source implementation used for years on a large government contract, managing over 400 databases and a petabyte of data.

It has a simple function interface and a more powerful procedure interface.
 
The program is fast, simple, relational, easy to administer, and secure.

Parameters control what code is run, where it is run, and how it is run.

Method5 was built using templated dynamic PL/SQL, links, a lexer, scheduler and pipes, table-driven configuration, and Oracle Data Cartridge.

Installation is easy and agentless.  Administration is well-documented and performed by only one person.

Real-life examples and scripts - Account management for 125K schemas, global data dictionary for 40 million objects, massive schema comparisons across dozens of databases, forecasts for managing a petabyte of storage, and more.

Method5 is a great tool for securing databases and the tool itself has been carefully hardened.  Both the program and the users can be precisely controlled to limit the databases, features, and privileges allowed.

Method5 is so fast it can change the way you work: be proactive; treat all your databases as one logical database; and always spend the extra minute to find, fix, and prevent problems on all database.

More information, including the code, user guide, and a video tutorial, is available at https://method5.github.io









================
Collaborate 2018
================

Title
-----
Automate SQL with Method5 remote execution

Abstract
--------

Learn how to easily run SQL, PL/SQL, and shell scripts on a large number of databases and hosts with the open source program Method5.  Remote execution is not just faster, it's a process that lets you find, fix, and prevent many problems that you would never solve one-database-at-a-time.  It starts as simply as SELECT * FROM TABLE(M5(p_code => 'SELECT * FROM DUAL', p_targets => 'DEV')); and can grow to solve many complex tasks.

Learning Objective(s)
---------------------

1. Learn how to quickly run SQL, PL/SQL, and shell scripts on a large number of databases and hosts.
2. Learn how relational remote execution can change the way you work.
3. Identify tasks that can benefit from rapid SQL automation.


Outline/Content Structure
-------------------------
Method5 is an open source program that extends Oracle SQL to allow parallel remote execution. It lets database administrators easily run SQL statements, PL/SQL blocks, and shell scripts quickly and securely on hundreds of databases.  Querying and controlling multiple databases can be as simple as this: select * from table(m5(p_code => 'select * from dual', p_targets => 'dev'));

Most organizations only automate a few obvious, pre-defined tasks.  Unexpected operational challenges don't have a scalable solution.  DBAs tend to avoid certain problems because they don't have the time to logon to each database and run a command.

Current automation tools can't transform the way you solve operational problems.  Existing tools are slow, complex, or insecure.  None of them are relational.

The ideal solution is a new dynamic SQL syntax that lets you easily specify the "what", the "where", and the "how" for statements.

Method5 is a robust, open source implementation used for years on a large government contract, managing over 400 databases and a petabyte of data.

It has a simple function interface and a more powerful procedure interface.
 
The program is fast, simple, relational, easy to administer, and secure.

Parameters control what code is run, where it is run, and how it is run.

Method5 was built using templated dynamic PL/SQL, links, a lexer, scheduler and pipes, table-driven configuration, and Oracle Data Cartridge.

Installation is easy and agentless.  Administration is well-documented and performed by only one person.

Real-life examples and scripts - Account management for 125K schemas, global data dictionary for 40 million objects, massive schema comparisons across dozens of databases, forecasts for managing a petabyte of storage, and more.

More information, including the code, user guide, and a video tutorial, is available at https://method5.github.io.

Method5 is so fast it can change the way you work: be proactive; treat all your databases as one logical database; and always spend the extra minute to find, fix, and prevent problems on all database.



========================
RMOUG Training Days 2018
========================

Title
-----
Automate SQL with Method5 remote execution


Summary
-------
Learn how to easily run SQL, PL/SQL, and shell scripts on a large number of databases and hosts with the open source program Method5.  Remote execution is not just faster, it's a process that lets you find, fix, and prevent many problems that you would never solve one-database-at-a-time.  It starts as simply as SELECT * FROM TABLE(M5(p_code => 'SELECT * FROM DUAL', p_targets => 'DEV')); and can grow to solve complex tasks.


Abstract
--------

Method5 is an open source program that extends Oracle SQL to allow parallel remote execution. It lets database administrators easily run SQL statements, PL/SQL blocks, and shell scripts quickly and securely on hundreds of databases.  Querying and controlling multiple databases can be as simple as this: select * from table(m5(p_code => 'select * from dual', p_targets => 'dev'));

Most organizations only automate a few obvious, pre-defined tasks.  Unexpected operational challenges don't have a scalable solution.  DBAs tend to avoid certain problems because they don't have the time to logon to each database and run a command.

Current automation tools can't transform the way you solve operational problems.  Existing tools are slow, complex, or insecure.  None of them are relational.

The ideal solution is a new dynamic SQL syntax that lets you easily specify the "what", the "where", and the "how" for statements.

Method5 is a robust, open source implementation used for years on a large government contract, managing over 400 databases and a petabyte of data.

It has a simple function interface and a more powerful procedure interface.
 
The program is fast, simple, relational, easy to administer, and secure.

Parameters control what code is run, where it is run, and how it is run.

Method5 was built using templated dynamic PL/SQL, links, a lexer, scheduler and pipes, table-driven configuration, and Oracle Data Cartridge.

Installation is easy and agentless.  Administration is well-documented and performed by only one person.

Real-life examples and scripts - Account management for 125K schemas, global data dictionary for 40 million objects, massive schema comparisons across dozens of databases, forecasts for managing a petabyte of storage, and more.

More information, including the code, user guide, and a video tutorial, is available at https://method5.github.io.

Method5 is so fast it can change the way you work: be proactive; treat all your databases as one logical database; and always spend the extra minute to find, fix, and prevent problems on all database.


Topic
-----
Database Tools of the Trade


Benefits
--------

1. Learn how relational remote execution can change the way you work.
2. Learn how to quickly run SQL, PL/SQL, and shell scripts on a large number of databases and hosts.
3. Identify tasks that can benefit from rapid SQL automation.



=======================================
East Coast Oracle Users Conference 2017
=======================================

Abstract Title
--------------
Automate SQL and PL/SQL on many databases with Method5 remote execution

Abstract Description
--------------------
Learn how to easily run SQL and PL/SQL statements on a large number of databases with the open source program Method5.  Remote execution is not just faster, it's a process that lets you find, fix, and prevent many problems.  It starts as simply as SELECT * FROM TABLE(M5(p_code => 'SELECT * FROM DUAL', p_targets => 'DEV')); and can grow to solve complex tasks.

Presentation Summary
--------------------
Method5 is an open source program that extends Oracle SQL to allow parallel remote execution. It lets database administrators easily run SQL statements quickly and securely on hundreds of databases.  Querying and controlling multiple databases can be as simple as this: select * from table(m5('select * from dual', 'dev'));

Most organizations only automate a few obvious, pre-defined tasks.  Unexpected operational challenges don't have a scalable solution.  DBAs tend to avoid certain problems because they don't want to spend the time to manually run a command many times.

Current automation tools can't transform the way you solve operational problems.  Existing tools are slow, complex, or insecure.  None of them are relational.

The ideal solution is a new dynamic SQL syntax that lets you easily specify the "what", the "where", and the "how" for statements.

Method5 is a robust open source implementation used for years in a large production environment.

It has a simple function interface and a more powerful procedure interface.
 
The program is fast, simple, relational, easy to administer, and secure.

Parameters control what code is run, where it is run, and how it is run.

Method5 was built using templated dynamic PL/SQL, links, a lexer, scheduler and pipes, table-driven configuration, and Oracle Data Cartridge.

Installation is easy and agentless.  Administration is well-documented and performed by only one person.

Real-life examples and scripts - Account management for 125K schemas, global data dictionary for 40 million objects, massive schema comparisons across dozens of databases, forecasts for managing a petabyte of storage, and more.

More information is available at http://method5.github.io and the GitHub repository.

Method5 is so fast it can change the way you work: be proactive; treat all your databases as one logical database; and always spend the extra minute to find, fix, and prevent problems on all database.


Bio
---
Jon Heller is an expert SQL and PL/SQL programmer with over 15 years of Oracle experience.  He is a DBA for Ventech Solutions in Urbandale, Iowa.  He enjoys creating open source software on GitHub and is active on Stack Overflow where he is a top user in Oracle and PL/SQL.  He has a Master of Computer Science degree from North Carolina State University.





======================
Oracle Open World 2017
======================

(Below were my notes but I don't think these were the exact same as the final submitted values.)

Title (80)
----------

Extend SQL and PL/SQL to run on multiple databases with Method5 remote execution

Learning objectives (I can't remember what they were called):
-------------------

The attendee will learn:
1. The need for a new type of dynamic SQL, where both the code and the targets can be programmatically controlled.
2. How to apply Oracle database and open source technologies to quickly run SQL statements on all databases.
3. Identify tasks that can benefit from rapid SQL automation.

Session Abstract
----------------
DBAs need to automate more than just common, pre-defined tasks. We need a more dynamic SQL and PL/SQL that lets us specify both what the statement is and where it runs. The open source program Method5 enables remote execution of SQL and PL/SQL. It starts with SELECT * FROM TABLE(M5('SELECT * FROM DUAL', 'DEV')); and has advanced features that can handle almost any task. PL/SQL, links, scheduler, pipes, and Data Cartridge create an agentless, fast, secure, and relational solution. Method5 is used to manage hundreds of databases and a petabyte of storage at the Centers for Medicare & Medicaid Services. Faster administration lets us get in the habit of spending an extra minute to find, fix, and prevent problems on all our databases. 

Biographical Sketch:
--------------------

Jon Heller is an expert SQL and PL/SQL programmer with over 15 years of Oracle experience.  Currently he is a DBA for Ventech Solutions in Urbandale, Iowa.  He enjoys creating open source software on GitHub and is active on Stackoverflow where he is a top user in Oracle and PL/SQL.  He has a Master of Computer Science degree from North Carolina State University.


Abstract (limit 750 characters)
-------------------------------

Method5 is an open source program that extends Oracle SQL to allow parallel remote execution. It lets database administrators easily run SQL statements quickly and securely on hundreds of databases.  Querying and controlling multiple databases can be as simple as this: select * from table(m5('select * from dual', 'dev'));

Most organization only automate obvious, pre-defined tasks.  Unexpected operational challenges don't have a scalable solution.

Current automation tools can't transform the way you solve operational problems.  Existing tools are slow, complex, or insecure.  None of them are relational.

The ideal solution is a new dynamic SQL syntax that specifies the "what" and the "where" for statements.

Method5 is a robust, open source implementation used for years in a large production environment.

It has a simple function interface and a more powerful procedure interface.
 
The program is fast, simple, relational, easy to administer, and secure.

Parameters control what code is run, where it is run, and how it is run.

Method5 was built using templated dynamic PL/SQL, links, a lexer, scheduler and pipes, table-driven configuration, and Oracle Data Cartridge.

Installation is easy and agentless.  Administration is well-documented and performed by only one person.

Examples - Account maintenance, global data dictionary, schema comparisons, forecasts, and more.

More information is available at http://method5.github.io and the GitHub repository.

Method5 is so fast it can change the way you work: be proactive; treat all your databases as one logical database; and always spend the extra minute to find, fix, and prevent problems on all database.
